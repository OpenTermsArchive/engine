name: Test

on:
  push:
    branches-ignore:
      - main # tests will be launched by workflow_call from the deploy workflow
  pull_request:
    types: [ opened, reopened ]
  workflow_call:
    outputs:
      release_type:
        description: "The release type extracted from changelog"
        value: ${{ jobs.check_changelog.outputs.release_type }}

jobs:
  check_changelog:
    runs-on: [ubuntu-latest]
    outputs:
      release_type: ${{ steps.set_release_type_output.outputs.release_type }}
    steps:
      - uses: actions/checkout@v2
      - name: Get release type in changelog
        run: echo "RELEASE_TYPE=$(cat CHANGELOG.md | grep -E '^## Unreleased \[(patch|minor|major)\]$' | grep -E -w -o "patch|minor|major" | tr -d '\n')" >> $GITHUB_ENV
      - name: Make release type available to subsequent jobs
        if: env.RELEASE_TYPE
        id: set_release_type_output
        run: |
          echo "Found release type '${{ env.RELEASE_TYPE }}'"
          echo "release_type=${{ env.RELEASE_TYPE }}" >> $GITHUB_OUTPUT
      - name: Fail and display error if no proper release type is found in changelog
        if: env.RELEASE_TYPE == ''
        run: echo "No valid release type found in changelog. The title of the 'Unreleased' section must contain one of the following tags '[patch]', '[minor]', '[major]'. For example, '## Unreleased [minor]'."; exit 1


  test:
    strategy:
      matrix:
        operating_system: [ ubuntu-20.04, windows-latest, macos-latest ]
      fail-fast: false # run tests on other operating systems even if one fails

    runs-on: ${{ matrix.operating_system }}

    steps:
      - run: |
          git config --global core.autocrlf false
      - uses: actions/checkout@v2
      - uses: ankane/setup-mongodb@ce30d9041565cb469945895d5bde3384a254dd2e # use commit ID until action is versioned, see https://github.com/ankane/setup-mongodb/issues/2
        with:
          mongodb-version: 5.0
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: npm ci
      - run: npm test

  validate_declarations:
    strategy:
      matrix:
        operating_system: [ ubuntu-latest, windows-latest, macos-latest ]
      fail-fast: false # run tests on other operating systems even if one fails

    runs-on: ${{ matrix.operating_system }}

    steps:
      - run: |
          git config --global core.autocrlf false
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: OpenTermsArchive/contrib-declarations
          path: ./contrib-declarations
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - run: cd ./contrib-declarations && npm install
      - run: npm ci
      - run: ./node_modules/.bin/cross-env NODE_ENV=ci npm run declarations:validate:schema
