---
- name: Load app config
  ansible.builtin.include_vars:
    name: app_config
    file: '../config/{{ config_file_name }}.json'

- name: Install common required packages
  apt:
    pkg:
      - build-essential
      - curl
      - git
      - zip
    update_cache: yes
    state: latest

- name: Add the NodeSource repository to the system
  shell: curl -sL https://deb.nodesource.com/setup_16.x | sudo bash -

- name: Install NodeJS and NPM
  apt:
    name: nodejs
    update_cache: yes
    state: latest

- name: Update NPM to latest version
  command: npm install -g npm

- name: Install pm2
  command: npm install -g pm2 --production=true

- name: Add global git config
  copy:
    src: .gitconfig
    dest: '/home/{{ ansible_user }}/.gitconfig'

- name: Add GitHub bot account SSH key
  copy:
    src: ota-bot-key.private_key
    dest: '/home/{{ ansible_user }}/.ssh/ota-bot-key'
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    mode: 0600

- name: Configure SSH to use GitHub bot account key on github.com
  template:
    src: ssh_config.j2
    dest: '/home/{{ ansible_user }}/.ssh/config'
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    mode: 0644

- name: Install Chromium — Debian
  apt:
    pkg:
      - chromium
    update_cache: yes
    state: latest
  when: ansible_distribution == 'Debian'

- name: Install Chromium — Ubuntu
  apt:
    pkg:
      - chromium-browser
    update_cache: yes
    state: latest
  when: ansible_distribution == 'Ubuntu'

  # See https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#recommended-enable-user-namespace-cloning
- name: Enable user namespace cloning to allow running Chromium in a sandbox
  command: sysctl -w kernel.unprivileged_userns_clone=1
  when: ansible_facts['architecture'] != 'aarch64'

- include_tasks: mongo.yml
  when:
    - (app_config.recorder.versions.storage.type is defined and app_config.recorder.versions.storage.type == 'mongo') or (app_config.recorder.snapshots.storage.type is defined and app_config.recorder.snapshots.storage.type == 'mongo')
    # Skip Debian 11 with ARM architecture as it is not currently supported by MongoDB. See https://www.mongodb.com/docs/manual/installation/#supported-platforms
    - ansible_distribution != 'Debian' or (ansible_distribution == 'Debian' and ansible_facts['architecture'] != 'aarch64')
