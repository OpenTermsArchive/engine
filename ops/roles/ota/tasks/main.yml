- name: Check if Open Terms Archive has already been cloned
  git:
    repo: '{{ ota_repository }}'
    dest: '/home/{{ ansible_user }}/{{ ota_app_name }}'
    clone: no
    update: no
    accept_hostkey: yes
    key_file: '/home/{{ ansible_user }}/.ssh/ota-bot-key'
  register: git_clone_ota # the `before` property of the return value can tell us if the repository has been cloned already or not, see <https://docs.ansible.com/ansible/latest/collections/ansible/builtin/git_module.html#return-values>
  tags:
    - restart
    - start
    - update
    - setup
    - stop
    - update-declarations

- name: Clone Open Terms Archive engine
  git:
    repo: '{{ ota_repository }}'
    dest: '/home/{{ ansible_user }}/{{ ota_app_name }}'
    force: yes
    accept_hostkey: yes
    key_file: '/home/{{ ansible_user }}/.ssh/ota-bot-key'
    depth: 1
  tags:
    - setup
    - update

- name: Install dependencies
  command:
    cmd: npm ci --production
    chdir: '/home/{{ ansible_user }}/{{ ota_app_name }}'
  tags:
    - setup
    - update

- name: Add .env file
  copy:
    src: .env
    dest: '/home/{{ ansible_user }}/{{ ota_app_name }}/.env'
  tags:
    - setup

- name: Install services declarations
  git:
    repo: '{{ services_repository }}'
    dest: '/home/{{ ansible_user }}/{{ declarations_directory }}'
    force: yes
    accept_hostkey: yes
    key_file: '/home/{{ ansible_user }}/.ssh/ota-bot-key'
    depth: 1
  tags:
    - setup
    - update
    - update-declarations

- name: Install services declarations dependencies
  command:
    cmd: npm ci --production
    chdir: '/home/{{ ansible_user }}/{{ declarations_directory }}'
  tags:
    - setup
    - update
    - update-declarations

- name: Stop Open Terms Archive process
  command: pm2 --silent stop "{{ ota_app_name }}"
  ignore_errors: yes
  when: git_clone_ota.before is defined and git_clone_ota.before # if git_clone_ota.before is not null, then the repository is not new
  tags:
    - restart
    - stop
    - update
    - update-declarations

- name: Unregister Open Terms Archive from process manager
  command: pm2 --silent delete "{{ ota_app_name }}"
  ignore_errors: yes
  when: git_clone_ota.before is defined and git_clone_ota.before # if git_clone_ota.before is not null, then the repository is not new
  tags:
    - restart
    - stop
    - update
    - update-declarations

- name: Stop Open Terms Archive release process
  command: pm2 --silent stop "{{ ota_app_name }}-release"
  ignore_errors: yes
  when: git_clone_ota.before is defined and git_clone_ota.before # if git_clone_ota.before is not null, then the repository is not new
  tags:
    - restart
    - stop
    - update
    - update-declarations

- name: Unregister Open Terms Archive release from process manager
  command: pm2 --silent delete "{{ ota_app_name }}-release"
  ignore_errors: yes
  when: git_clone_ota.before is defined and git_clone_ota.before # if git_clone_ota.before is not null, then the repository is not new
  tags:
    - restart
    - stop
    - update
    - update-declarations

- include_tasks: database.yml
  vars:
    name: snapshots
    repository: '{{ snapshots_repository }}'
    branch: '{{ snapshots_branch }}'
    directory: '{{ snapshots_directory }}'
  tags:
    - setup
    - update

- include_tasks: database.yml
  vars:
    name: versions
    repository: '{{ versions_repository }}'
    branch: '{{ versions_branch }}'
    directory: '{{ versions_directory }}'
  tags:
    - setup
    - update

- name: Start Open Terms Archive
  command:
    cmd: pm2 start --name "{{ ota_app_name }}" --no-autorestart npm -- run start:scheduler
    chdir: '/home/{{ ansible_user }}/{{ ota_app_name }}'
  environment:
    NODE_ENV: production
  tags:
    - restart
    - start
    - update
    - update-declarations

- name: Schedule Open Terms Archive release
  command:
    cmd: pm2 start --name "{{ ota_app_name }}-release" --no-autorestart npm -- run dataset:scheduler
    chdir: '/home/{{ ansible_user }}/{{ ota_app_name }}'
  environment:
    NODE_ENV: production
  tags:
    - restart
    - start
    - update
    - update-declarations
